# -*- coding: utf-8 -*-
"""ICP1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fXoZ9CQ5edaDSpurFh4T3ZX0k8_jPPAM
"""

#Question 1
ages = [19, 22, 19, 24, 20, 25, 26, 24, 25, 24]
#Sort the list and find the min and max age
ages.sort()
print("sorted list is ",ages)
mini=ages[0]
maxi=ages[-1]
print("\nthe minimum age is %d" %(mini))
print("the maximum age is %d" %(maxi))
#Add the min age and the max age again to the list
ages.append(mini)
ages.append(maxi)
print("\nList after adding min and max to the list ", ages)
#Find the median age (one middle item or two middle items divided by two)
ages.sort()
n=len(ages)
if (n%2==0):
    print("\nmedian is %d"%((ages[n//2]+ages[(n//2)-1])/2))
else:
    print("\nmedian is %d"%(ages[(n//2)+1]))
#Find the average age (sum of all items divided by their number)
print("average is %.3f"%(sum(ages)/len(ages)))
#Find the range of the ages (max minus min)
print("range of the list ages is: ", (maxi-mini))

#Question 2
#Create an empty dictionary called dog
dog={}
#Add name, color, breed, legs, age to the dog dictionary
dog['name']='roro'
dog['color']='black'
dog['breed']='husky'
dog['legs']=4
dog['age']=3
#Create a student dictionary and add first_name, last_name, gender, age,
#marital status, skills, country, city and address as keys for the dictionary
student={
    'first_name': 'Praneetha',
    'last_name': 'Babburi',
    'gender':'female',
    'age':24,
    'marital status': 'single',
    'skills':['c', 'python'],
    'country': 'India',
    'city': 'Ongole',
    'address':'Mangamur road'
}
#Get the length of the student dictionary
print('length of student dictionary is ', len(student))

#Get the value of skills and check the data type, it should be a list
print('skills of the student are', student['skills'])
print('data type of skills: ', type(student['skills']))

#Modify the skills values by adding one or two skills
student['skills'].append('Java')
print(student['skills'])

#Get the dictionary keys as a list
keylist = list(student.keys())
print(keylist)

#Get the dictionary values as a list
valuelist = list(student.values())
print(valuelist)

#Question 3
#Create a tuple containing names of your sisters and your brothers
sisters = ('pranavi','ramya', 'harini')
brothers = ('anil', 'vamsi')

#Join brothers and sisters tuples and assign it to siblings
siblings = sisters+brothers

#How many siblings do you have?
print("no.of siblings: ", len(siblings))

#Modify the siblings tuple and add the name of your father
#and mother and assign it to family_members

#we can not directly modify a tuple
family_members = siblings + ('sailaja', 'brahmam')
print('family_members: ',family_members)

#Question 4
it_companies = {'Facebook', 'Google', 'Microsoft', 'Apple', 'IBM', 'Oracle', 'Amazon'}
A = {19, 22, 24, 20, 25, 26}
B = {19, 22, 20, 25, 26, 24, 28, 27}
age = [22, 19, 24, 25, 26, 24, 25, 24]

#Find the length of the set it_companies
print('length of the set it_companies is: ', len(it_companies))

#Add 'Twitter' to it_companies
it_companies.add('Twitter')
print(it_companies)

#Insert multiple IT companies at once to the set it_companies
a={"TATA", "HCL", 'Meta'}
it_companies.update(a)
print(it_companies)

#Remove one of the companies from the set it_companies
it_companies.remove('Facebook')
print(it_companies)

#What is the difference between remove and discard
#it_companies.remove('Infosys') ---> the remove function throws an error if the element is not found in the set unlike discrad()
it_companies.discard('Infosys')

#Join A and B
print('set after joining A and B: ', A|B)

#Find A intersection B
print('A intersection B is: ', A&B)

#Is A subset of B
print('Is A subset of B?: ', A.issubset(B))

#Are A and B disjoint sets
print('Are A and B disjoint?: ', A.isdisjoint(B))

#Join A with B and B with A
print('result set afer joining A with B: ', A|B)
print('result set afer joining B with A: ', B|A)

#What is the symmetric difference between A and B
print('symmetric differnece between A and B: ', A^B)

#Delete the sets completely
A.clear()
B.clear()

#Convert the ages to a set and compare the length of the list and the set.
ageset=set(age)
print("the length of the set is %d while the length of the list is %d"%(len(ageset),len(age)))

#Question 5
import math

#for static input
rad=30
_area_of_circle_ = math.pi*(rad**2)
_circum_of_circle_ = 2*math.pi*rad

#for dynamic input
userrad= int(input('enter radius of the circle '))
print('area of given circle is %.2f '%(math.pi*(userrad**2)))

#Question 6
str = "I am a teacher and I love to inspire and teach people"
unique=set(str.split())
print(unique)
print('unique words used in the sentence are: ',len(unique))

#Question 7
print('Name\tAge\tCountry\tCity')
print('Asabeneh\t250\tFinland\tHelsinki')

#Question 8
radius = 10
area = 3.14 * radius ** 2
print("The area of a circle with radius {} is {} meters square.".format(radius,int(area)))

#Question 9
N=int(input('enter number of students '))
weight_lb=[]
for i in range(N):
       print('enter weight of {} student in lbs'.format(i+1))
       inp=float(input())
       weight_lb.append(inp)
weight_kg=[]
for i in weight_lb:
  j=round(i*0.453592,2)
  weight_kg.append(float(j))
print(weight_kg)